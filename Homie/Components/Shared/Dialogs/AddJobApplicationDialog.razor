@namespace Homie.Components.Shared

@inject IDbService DbService
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudForm @ref="_form" Spacing="3">
            <MudTextField @bind-Value="_newItem.Link" Label="Link" Required />
            <MudTextField @bind-Value="_newItem.Position" Label="Position" Required />
            <MudTextField @bind-Value="_newItem.Company" Label="Company" Required />
            <MudTextField @bind-Value="_newItem.Industry" Label="Industry" />
            <MudTextField @bind-Value="_newItem.Location" Label="Location" />
            <MudDatePicker @bind-Date="_newItem.DatePosted" Label="Posted" Clearable Editable />
            <MudDatePicker @bind-Date="_newItem.DateApplied" Label="Applied" Clearable Editable />
            <MudTextField @bind-Value="_newItem.Notes" Label="Notes" Lines="4" MaxLines="8" Clearable />
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Dialog.Cancel">Cancel</MudButton>
        <MudButton OnClick="OnAddItem" Color="Color.Primary" Variant="Variant.Filled">Add Application</MudButton>
    </DialogActions>
</MudDialog>


@code {

    [CascadingParameter]
    private IMudDialogInstance Dialog { get; set; }

    private MudForm _form;
    private Jobs.JobApplication _newItem = new();
    
    private async Task OnAddItem()
    {
        await _form.Validate();
        if (!_form.IsValid) return;

        try
        {
            await DbService.AddJobApplicationAsync(_newItem);
            Snackbar.Add($"{_newItem.Position} ({_newItem.Company}) was added", Severity.Success);
            Dialog.Close(DialogResult.Ok(true));
        }
        catch (Exception e)
        {
            Snackbar.Add($"{_newItem.Position} ({_newItem.Company}) could not be added", Severity.Error);
        }

    }

}